//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhysX.Net {

public class PxContactPatch : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PxContactPatch(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxContactPatch obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PxContactPatch() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          physxPINVOKE.delete_PxContactPatch(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public float restitution {
    set {
      physxPINVOKE.PxContactPatch_restitution_set(swigCPtr, value);
    } 
    get {
      float ret = physxPINVOKE.PxContactPatch_restitution_get(swigCPtr);
      return ret;
    } 
  }

  public float dynamicFriction {
    set {
      physxPINVOKE.PxContactPatch_dynamicFriction_set(swigCPtr, value);
    } 
    get {
      float ret = physxPINVOKE.PxContactPatch_dynamicFriction_get(swigCPtr);
      return ret;
    } 
  }

  public float staticFriction {
    set {
      physxPINVOKE.PxContactPatch_staticFriction_set(swigCPtr, value);
    } 
    get {
      float ret = physxPINVOKE.PxContactPatch_staticFriction_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_uint8_t startContactIndex {
    set {
      physxPINVOKE.PxContactPatch_startContactIndex_set(swigCPtr, SWIGTYPE_p_uint8_t.getCPtr(value));
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint8_t ret = new SWIGTYPE_p_uint8_t(physxPINVOKE.PxContactPatch_startContactIndex_get(swigCPtr), true);
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint8_t nbContacts {
    set {
      physxPINVOKE.PxContactPatch_nbContacts_set(swigCPtr, SWIGTYPE_p_uint8_t.getCPtr(value));
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint8_t ret = new SWIGTYPE_p_uint8_t(physxPINVOKE.PxContactPatch_nbContacts_get(swigCPtr), true);
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint8_t materialFlags {
    set {
      physxPINVOKE.PxContactPatch_materialFlags_set(swigCPtr, SWIGTYPE_p_uint8_t.getCPtr(value));
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint8_t ret = new SWIGTYPE_p_uint8_t(physxPINVOKE.PxContactPatch_materialFlags_get(swigCPtr), true);
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint8_t internalFlags {
    set {
      physxPINVOKE.PxContactPatch_internalFlags_set(swigCPtr, SWIGTYPE_p_uint8_t.getCPtr(value));
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint8_t ret = new SWIGTYPE_p_uint8_t(physxPINVOKE.PxContactPatch_internalFlags_get(swigCPtr), true);
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint16_t materialIndex0 {
    set {
      physxPINVOKE.PxContactPatch_materialIndex0_set(swigCPtr, SWIGTYPE_p_uint16_t.getCPtr(value));
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint16_t ret = new SWIGTYPE_p_uint16_t(physxPINVOKE.PxContactPatch_materialIndex0_get(swigCPtr), true);
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint16_t materialIndex1 {
    set {
      physxPINVOKE.PxContactPatch_materialIndex1_set(swigCPtr, SWIGTYPE_p_uint16_t.getCPtr(value));
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint16_t ret = new SWIGTYPE_p_uint16_t(physxPINVOKE.PxContactPatch_materialIndex1_get(swigCPtr), true);
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public PxContactPatch() : this(physxPINVOKE.new_PxContactPatch(), true) {
  }

  public enum PxContactPatchFlags {
    eHAS_FACE_INDICES = 1,
    eMODIFIABLE = 2,
    eFORCE_NO_RESPONSE = 4,
    eHAS_MODIFIED_MASS_RATIOS = 8,
    eHAS_TARGET_VELOCITY = 16,
    eHAS_MAX_IMPULSE = 32,
    eREGENERATE_PATCHES = 64,
    eCOMPRESSED_MODIFIED_CONTACT = 128
  }

}

}
