//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhysX.Net {

public class PxGeometryHolder : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PxGeometryHolder(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxGeometryHolder obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PxGeometryHolder() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          physxPINVOKE.delete_PxGeometryHolder(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public PxGeometryType.Enum getType() {
    PxGeometryType.Enum ret = (PxGeometryType.Enum)physxPINVOKE.PxGeometryHolder_getType(swigCPtr);
    return ret;
  }

  public PxGeometry any() {
    PxGeometry ret = new PxGeometry(physxPINVOKE.PxGeometryHolder_any__SWIG_0(swigCPtr), false);
    return ret;
  }

  public PxSphereGeometry sphere() {
    PxSphereGeometry ret = new PxSphereGeometry(physxPINVOKE.PxGeometryHolder_sphere__SWIG_0(swigCPtr), false);
    return ret;
  }

  public PxPlaneGeometry plane() {
    PxPlaneGeometry ret = new PxPlaneGeometry(physxPINVOKE.PxGeometryHolder_plane__SWIG_0(swigCPtr), false);
    return ret;
  }

  public PxCapsuleGeometry capsule() {
    PxCapsuleGeometry ret = new PxCapsuleGeometry(physxPINVOKE.PxGeometryHolder_capsule__SWIG_0(swigCPtr), false);
    return ret;
  }

  public PxBoxGeometry box() {
    PxBoxGeometry ret = new PxBoxGeometry(physxPINVOKE.PxGeometryHolder_box__SWIG_0(swigCPtr), false);
    return ret;
  }

  public PxConvexMeshGeometry convexMesh() {
    PxConvexMeshGeometry ret = new PxConvexMeshGeometry(physxPINVOKE.PxGeometryHolder_convexMesh__SWIG_0(swigCPtr), false);
    return ret;
  }

  public PxTriangleMeshGeometry triangleMesh() {
    PxTriangleMeshGeometry ret = new PxTriangleMeshGeometry(physxPINVOKE.PxGeometryHolder_triangleMesh__SWIG_0(swigCPtr), false);
    return ret;
  }

  public PxHeightFieldGeometry heightField() {
    PxHeightFieldGeometry ret = new PxHeightFieldGeometry(physxPINVOKE.PxGeometryHolder_heightField__SWIG_0(swigCPtr), false);
    return ret;
  }

  public void storeAny(PxGeometry geometry) {
    physxPINVOKE.PxGeometryHolder_storeAny(swigCPtr, PxGeometry.getCPtr(geometry));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public PxGeometryHolder() : this(physxPINVOKE.new_PxGeometryHolder__SWIG_0(), true) {
  }

  public PxGeometryHolder(PxGeometry geometry) : this(physxPINVOKE.new_PxGeometryHolder__SWIG_1(PxGeometry.getCPtr(geometry)), true) {
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
