//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhysX.Net {

public class PxSimulationFilterCallback : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PxSimulationFilterCallback(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxSimulationFilterCallback obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual SWIGTYPE_p_physx__PxFlagsT_physx__PxFilterFlag__Enum_uint16_t_t pairFound(SWIGTYPE_p_uint32_t pairID, SWIGTYPE_p_uint32_t attributes0, PxFilterData filterData0, PxActor a0, PxShape s0, SWIGTYPE_p_uint32_t attributes1, PxFilterData filterData1, PxActor a1, PxShape s1, SWIGTYPE_p_physx__PxFlagsT_physx__PxPairFlag__Enum_uint16_t_t pairFlags) {
    SWIGTYPE_p_physx__PxFlagsT_physx__PxFilterFlag__Enum_uint16_t_t ret = new SWIGTYPE_p_physx__PxFlagsT_physx__PxFilterFlag__Enum_uint16_t_t(physxPINVOKE.PxSimulationFilterCallback_pairFound(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(pairID), SWIGTYPE_p_uint32_t.getCPtr(attributes0), PxFilterData.getCPtr(filterData0), PxActor.getCPtr(a0), PxShape.getCPtr(s0), SWIGTYPE_p_uint32_t.getCPtr(attributes1), PxFilterData.getCPtr(filterData1), PxActor.getCPtr(a1), PxShape.getCPtr(s1), SWIGTYPE_p_physx__PxFlagsT_physx__PxPairFlag__Enum_uint16_t_t.getCPtr(pairFlags)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void pairLost(SWIGTYPE_p_uint32_t pairID, SWIGTYPE_p_uint32_t attributes0, PxFilterData filterData0, SWIGTYPE_p_uint32_t attributes1, PxFilterData filterData1, bool objectRemoved) {
    physxPINVOKE.PxSimulationFilterCallback_pairLost(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(pairID), SWIGTYPE_p_uint32_t.getCPtr(attributes0), PxFilterData.getCPtr(filterData0), SWIGTYPE_p_uint32_t.getCPtr(attributes1), PxFilterData.getCPtr(filterData1), objectRemoved);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual bool statusChange(SWIGTYPE_p_uint32_t pairID, SWIGTYPE_p_physx__PxFlagsT_physx__PxPairFlag__Enum_uint16_t_t pairFlags, SWIGTYPE_p_physx__PxFlagsT_physx__PxFilterFlag__Enum_uint16_t_t filterFlags) {
    bool ret = physxPINVOKE.PxSimulationFilterCallback_statusChange(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(pairID), SWIGTYPE_p_physx__PxFlagsT_physx__PxPairFlag__Enum_uint16_t_t.getCPtr(pairFlags), SWIGTYPE_p_physx__PxFlagsT_physx__PxFilterFlag__Enum_uint16_t_t.getCPtr(filterFlags));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
