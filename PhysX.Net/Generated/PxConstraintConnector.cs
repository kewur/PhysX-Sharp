//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhysX.Net {

public class PxConstraintConnector : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PxConstraintConnector(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxConstraintConnector obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PxConstraintConnector() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          physxPINVOKE.delete_PxConstraintConnector(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual SWIGTYPE_p_void prepareData() {
    global::System.IntPtr cPtr = physxPINVOKE.PxConstraintConnector_prepareData(swigCPtr);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public virtual bool updatePvdProperties(SWIGTYPE_p_physx__pvdsdk__PvdDataStream pvdConnection, PxConstraint c, PxPvdUpdateType.Enum updateType) {
    bool ret = physxPINVOKE.PxConstraintConnector_updatePvdProperties(swigCPtr, SWIGTYPE_p_physx__pvdsdk__PvdDataStream.getCPtr(pvdConnection), PxConstraint.getCPtr(c), (int)updateType);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void onConstraintRelease() {
    physxPINVOKE.PxConstraintConnector_onConstraintRelease(swigCPtr);
  }

  public virtual void onComShift(SWIGTYPE_p_uint32_t actor) {
    physxPINVOKE.PxConstraintConnector_onComShift(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(actor));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void onOriginShift(PxVec3 shift) {
    physxPINVOKE.PxConstraintConnector_onOriginShift(swigCPtr, PxVec3.getCPtr(shift));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual SWIGTYPE_p_void getExternalReference(SWIGTYPE_p_uint32_t typeID) {
    global::System.IntPtr cPtr = physxPINVOKE.PxConstraintConnector_getExternalReference(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(typeID));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PxBase getSerializable() {
    global::System.IntPtr cPtr = physxPINVOKE.PxConstraintConnector_getSerializable(swigCPtr);
    PxBase ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxBase(cPtr, false);
    return ret;
  }

  public virtual SWIGTYPE_p_f_p_physx__Px1DConstraint_r_physx__PxVec3_uint32_t_r_physx__PxConstraintInvMassScale_p_q_const__void_r_q_const__physx__PxTransform_r_q_const__physx__PxTransform__uint32_t getPrep() {
    global::System.IntPtr cPtr = physxPINVOKE.PxConstraintConnector_getPrep(swigCPtr);
    SWIGTYPE_p_f_p_physx__Px1DConstraint_r_physx__PxVec3_uint32_t_r_physx__PxConstraintInvMassScale_p_q_const__void_r_q_const__physx__PxTransform_r_q_const__physx__PxTransform__uint32_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_physx__Px1DConstraint_r_physx__PxVec3_uint32_t_r_physx__PxConstraintInvMassScale_p_q_const__void_r_q_const__physx__PxTransform_r_q_const__physx__PxTransform__uint32_t(cPtr, false);
    return ret;
  }

  public virtual SWIGTYPE_p_void getConstantBlock() {
    global::System.IntPtr cPtr = physxPINVOKE.PxConstraintConnector_getConstantBlock(swigCPtr);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

}

}
