//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhysX.Net {

public class PxArticulationLink : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PxArticulationLink(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxArticulationLink obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual void release() {
    physxPINVOKE.PxArticulationLink_release(swigCPtr);
  }

  public virtual PxArticulation getArticulation() {
    PxArticulation ret = new PxArticulation(physxPINVOKE.PxArticulationLink_getArticulation(swigCPtr), false);
    return ret;
  }

  public virtual PxArticulationJoint getInboundJoint() {
    global::System.IntPtr cPtr = physxPINVOKE.PxArticulationLink_getInboundJoint(swigCPtr);
    PxArticulationJoint ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxArticulationJoint(cPtr, false);
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getNbChildren() {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxArticulationLink_getNbChildren(swigCPtr), true);
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getChildren(SWIGTYPE_p_p_physx__PxArticulationLink userBuffer, SWIGTYPE_p_uint32_t bufferSize, SWIGTYPE_p_uint32_t startIndex) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxArticulationLink_getChildren__SWIG_0(swigCPtr, SWIGTYPE_p_p_physx__PxArticulationLink.getCPtr(userBuffer), SWIGTYPE_p_uint32_t.getCPtr(bufferSize), SWIGTYPE_p_uint32_t.getCPtr(startIndex)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getChildren(SWIGTYPE_p_p_physx__PxArticulationLink userBuffer, SWIGTYPE_p_uint32_t bufferSize) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxArticulationLink_getChildren__SWIG_1(swigCPtr, SWIGTYPE_p_p_physx__PxArticulationLink.getCPtr(userBuffer), SWIGTYPE_p_uint32_t.getCPtr(bufferSize)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual string getConcreteTypeName() {
    string ret = physxPINVOKE.PxArticulationLink_getConcreteTypeName(swigCPtr);
    return ret;
  }

}

}
