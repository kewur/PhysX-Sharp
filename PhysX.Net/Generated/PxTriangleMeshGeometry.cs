//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhysX.Net {

public class PxTriangleMeshGeometry : PxGeometry {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal PxTriangleMeshGeometry(global::System.IntPtr cPtr, bool cMemoryOwn) : base(physxPINVOKE.PxTriangleMeshGeometry_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxTriangleMeshGeometry obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PxTriangleMeshGeometry() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          physxPINVOKE.delete_PxTriangleMeshGeometry(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public PxTriangleMeshGeometry() : this(physxPINVOKE.new_PxTriangleMeshGeometry__SWIG_0(), true) {
  }

  public PxTriangleMeshGeometry(SWIGTYPE_p_physx__PxTriangleMesh mesh, SWIGTYPE_p_PxMeshScale scaling, SWIGTYPE_p_physx__PxFlagsT_physx__PxMeshGeometryFlag__Enum_uint8_t_t flags) : this(physxPINVOKE.new_PxTriangleMeshGeometry__SWIG_1(SWIGTYPE_p_physx__PxTriangleMesh.getCPtr(mesh), SWIGTYPE_p_PxMeshScale.getCPtr(scaling), SWIGTYPE_p_physx__PxFlagsT_physx__PxMeshGeometryFlag__Enum_uint8_t_t.getCPtr(flags)), true) {
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public PxTriangleMeshGeometry(SWIGTYPE_p_physx__PxTriangleMesh mesh, SWIGTYPE_p_PxMeshScale scaling) : this(physxPINVOKE.new_PxTriangleMeshGeometry__SWIG_2(SWIGTYPE_p_physx__PxTriangleMesh.getCPtr(mesh), SWIGTYPE_p_PxMeshScale.getCPtr(scaling)), true) {
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public PxTriangleMeshGeometry(SWIGTYPE_p_physx__PxTriangleMesh mesh) : this(physxPINVOKE.new_PxTriangleMeshGeometry__SWIG_3(SWIGTYPE_p_physx__PxTriangleMesh.getCPtr(mesh)), true) {
  }

  public bool isValid() {
    bool ret = physxPINVOKE.PxTriangleMeshGeometry_isValid(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_PxMeshScale scale {
    set {
      physxPINVOKE.PxTriangleMeshGeometry_scale_set(swigCPtr, SWIGTYPE_p_PxMeshScale.getCPtr(value));
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_PxMeshScale ret = new SWIGTYPE_p_PxMeshScale(physxPINVOKE.PxTriangleMeshGeometry_scale_get(swigCPtr), true);
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_physx__PxFlagsT_physx__PxMeshGeometryFlag__Enum_uint8_t_t meshFlags {
    set {
      physxPINVOKE.PxTriangleMeshGeometry_meshFlags_set(swigCPtr, SWIGTYPE_p_physx__PxFlagsT_physx__PxMeshGeometryFlag__Enum_uint8_t_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = physxPINVOKE.PxTriangleMeshGeometry_meshFlags_get(swigCPtr);
      SWIGTYPE_p_physx__PxFlagsT_physx__PxMeshGeometryFlag__Enum_uint8_t_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_physx__PxFlagsT_physx__PxMeshGeometryFlag__Enum_uint8_t_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_PxPaddingT_3_t paddingFromFlags {
    set {
      physxPINVOKE.PxTriangleMeshGeometry_paddingFromFlags_set(swigCPtr, SWIGTYPE_p_PxPaddingT_3_t.getCPtr(value));
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_PxPaddingT_3_t ret = new SWIGTYPE_p_PxPaddingT_3_t(physxPINVOKE.PxTriangleMeshGeometry_paddingFromFlags_get(swigCPtr), true);
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_physx__PxTriangleMesh triangleMesh {
    set {
      physxPINVOKE.PxTriangleMeshGeometry_triangleMesh_set(swigCPtr, SWIGTYPE_p_physx__PxTriangleMesh.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = physxPINVOKE.PxTriangleMeshGeometry_triangleMesh_get(swigCPtr);
      SWIGTYPE_p_physx__PxTriangleMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_physx__PxTriangleMesh(cPtr, false);
      return ret;
    } 
  }

}

}
