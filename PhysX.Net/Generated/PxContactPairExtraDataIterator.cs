//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhysX.Net {

public class PxContactPairExtraDataIterator : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PxContactPairExtraDataIterator(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxContactPairExtraDataIterator obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PxContactPairExtraDataIterator() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          physxPINVOKE.delete_PxContactPairExtraDataIterator(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public PxContactPairExtraDataIterator(SWIGTYPE_p_uint8_t stream, SWIGTYPE_p_uint32_t size) : this(physxPINVOKE.new_PxContactPairExtraDataIterator(SWIGTYPE_p_uint8_t.getCPtr(stream), SWIGTYPE_p_uint32_t.getCPtr(size)), true) {
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool nextItemSet() {
    bool ret = physxPINVOKE.PxContactPairExtraDataIterator_nextItemSet(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_uint8_t currPtr {
    set {
      physxPINVOKE.PxContactPairExtraDataIterator_currPtr_set(swigCPtr, SWIGTYPE_p_uint8_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = physxPINVOKE.PxContactPairExtraDataIterator_currPtr_get(swigCPtr);
      SWIGTYPE_p_uint8_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_uint8_t endPtr {
    set {
      physxPINVOKE.PxContactPairExtraDataIterator_endPtr_set(swigCPtr, SWIGTYPE_p_uint8_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = physxPINVOKE.PxContactPairExtraDataIterator_endPtr_get(swigCPtr);
      SWIGTYPE_p_uint8_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(cPtr, false);
      return ret;
    } 
  }

  public PxContactPairVelocity preSolverVelocity {
    set {
      physxPINVOKE.PxContactPairExtraDataIterator_preSolverVelocity_set(swigCPtr, PxContactPairVelocity.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = physxPINVOKE.PxContactPairExtraDataIterator_preSolverVelocity_get(swigCPtr);
      PxContactPairVelocity ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxContactPairVelocity(cPtr, false);
      return ret;
    } 
  }

  public PxContactPairVelocity postSolverVelocity {
    set {
      physxPINVOKE.PxContactPairExtraDataIterator_postSolverVelocity_set(swigCPtr, PxContactPairVelocity.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = physxPINVOKE.PxContactPairExtraDataIterator_postSolverVelocity_get(swigCPtr);
      PxContactPairVelocity ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxContactPairVelocity(cPtr, false);
      return ret;
    } 
  }

  public PxContactPairPose eventPose {
    set {
      physxPINVOKE.PxContactPairExtraDataIterator_eventPose_set(swigCPtr, PxContactPairPose.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = physxPINVOKE.PxContactPairExtraDataIterator_eventPose_get(swigCPtr);
      PxContactPairPose ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxContactPairPose(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_uint32_t contactPairIndex {
    set {
      physxPINVOKE.PxContactPairExtraDataIterator_contactPairIndex_set(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(value));
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxContactPairExtraDataIterator_contactPairIndex_get(swigCPtr), true);
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}

}
