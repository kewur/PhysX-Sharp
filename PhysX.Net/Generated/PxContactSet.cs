//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhysX.Net {

public class PxContactSet : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PxContactSet(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxContactSet obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PxContactSet() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          physxPINVOKE.delete_PxContactSet(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public PxVec3 getPoint(SWIGTYPE_p_uint32_t i) {
    PxVec3 ret = new PxVec3(physxPINVOKE.PxContactSet_getPoint(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i)), false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setPoint(SWIGTYPE_p_uint32_t i, PxVec3 p) {
    physxPINVOKE.PxContactSet_setPoint(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i), PxVec3.getCPtr(p));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public PxVec3 getNormal(SWIGTYPE_p_uint32_t i) {
    PxVec3 ret = new PxVec3(physxPINVOKE.PxContactSet_getNormal(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i)), false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setNormal(SWIGTYPE_p_uint32_t i, PxVec3 n) {
    physxPINVOKE.PxContactSet_setNormal(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i), PxVec3.getCPtr(n));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public float getSeparation(SWIGTYPE_p_uint32_t i) {
    float ret = physxPINVOKE.PxContactSet_getSeparation(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setSeparation(SWIGTYPE_p_uint32_t i, float s) {
    physxPINVOKE.PxContactSet_setSeparation(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i), s);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public PxVec3 getTargetVelocity(SWIGTYPE_p_uint32_t i) {
    PxVec3 ret = new PxVec3(physxPINVOKE.PxContactSet_getTargetVelocity(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i)), false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setTargetVelocity(SWIGTYPE_p_uint32_t i, PxVec3 v) {
    physxPINVOKE.PxContactSet_setTargetVelocity(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i), PxVec3.getCPtr(v));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_uint32_t getInternalFaceIndex0(SWIGTYPE_p_uint32_t i) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxContactSet_getInternalFaceIndex0(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_uint32_t getInternalFaceIndex1(SWIGTYPE_p_uint32_t i) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxContactSet_getInternalFaceIndex1(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public float getMaxImpulse(SWIGTYPE_p_uint32_t i) {
    float ret = physxPINVOKE.PxContactSet_getMaxImpulse(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setMaxImpulse(SWIGTYPE_p_uint32_t i, float s) {
    physxPINVOKE.PxContactSet_setMaxImpulse(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i), s);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public float getRestitution(SWIGTYPE_p_uint32_t i) {
    float ret = physxPINVOKE.PxContactSet_getRestitution(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setRestitution(SWIGTYPE_p_uint32_t i, float r) {
    physxPINVOKE.PxContactSet_setRestitution(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i), r);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public float getStaticFriction(SWIGTYPE_p_uint32_t i) {
    float ret = physxPINVOKE.PxContactSet_getStaticFriction(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setStaticFriction(SWIGTYPE_p_uint32_t i, float f) {
    physxPINVOKE.PxContactSet_setStaticFriction(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i), f);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public float getDynamicFriction(SWIGTYPE_p_uint32_t i) {
    float ret = physxPINVOKE.PxContactSet_getDynamicFriction(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setDynamicFriction(SWIGTYPE_p_uint32_t i, float f) {
    physxPINVOKE.PxContactSet_setDynamicFriction(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i), f);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public void ignore(SWIGTYPE_p_uint32_t i) {
    physxPINVOKE.PxContactSet_ignore(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(i));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_uint32_t size() {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxContactSet_size(swigCPtr), true);
    return ret;
  }

  public float getInvMassScale0() {
    float ret = physxPINVOKE.PxContactSet_getInvMassScale0(swigCPtr);
    return ret;
  }

  public float getInvMassScale1() {
    float ret = physxPINVOKE.PxContactSet_getInvMassScale1(swigCPtr);
    return ret;
  }

  public float getInvInertiaScale0() {
    float ret = physxPINVOKE.PxContactSet_getInvInertiaScale0(swigCPtr);
    return ret;
  }

  public float getInvInertiaScale1() {
    float ret = physxPINVOKE.PxContactSet_getInvInertiaScale1(swigCPtr);
    return ret;
  }

  public void setInvMassScale0(float scale) {
    physxPINVOKE.PxContactSet_setInvMassScale0(swigCPtr, scale);
  }

  public void setInvMassScale1(float scale) {
    physxPINVOKE.PxContactSet_setInvMassScale1(swigCPtr, scale);
  }

  public void setInvInertiaScale0(float scale) {
    physxPINVOKE.PxContactSet_setInvInertiaScale0(swigCPtr, scale);
  }

  public void setInvInertiaScale1(float scale) {
    physxPINVOKE.PxContactSet_setInvInertiaScale1(swigCPtr, scale);
  }

  public PxContactSet() : this(physxPINVOKE.new_PxContactSet(), true) {
  }

}

}
