//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhysX.Net {

public class PxPairFlag : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PxPairFlag(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxPairFlag obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PxPairFlag() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          physxPINVOKE.delete_PxPairFlag(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public PxPairFlag() : this(physxPINVOKE.new_PxPairFlag(), true) {
  }

  public enum Enum {
    eSOLVE_CONTACT = (1 << 0),
    eMODIFY_CONTACTS = (1 << 1),
    eNOTIFY_TOUCH_FOUND = (1 << 2),
    eNOTIFY_TOUCH_PERSISTS = (1 << 3),
    eNOTIFY_TOUCH_LOST = (1 << 4),
    eNOTIFY_TOUCH_CCD = (1 << 5),
    eNOTIFY_THRESHOLD_FORCE_FOUND = (1 << 6),
    eNOTIFY_THRESHOLD_FORCE_PERSISTS = (1 << 7),
    eNOTIFY_THRESHOLD_FORCE_LOST = (1 << 8),
    eNOTIFY_CONTACT_POINTS = (1 << 9),
    eDETECT_DISCRETE_CONTACT = (1 << 10),
    eDETECT_CCD_CONTACT = (1 << 11),
    ePRE_SOLVER_VELOCITY = (1 << 12),
    ePOST_SOLVER_VELOCITY = (1 << 13),
    eCONTACT_EVENT_POSE = (1 << 14),
    eNEXT_FREE = (1 << 15),
    eCONTACT_DEFAULT = eSOLVE_CONTACT|eDETECT_DISCRETE_CONTACT,
    eTRIGGER_DEFAULT = eNOTIFY_TOUCH_FOUND|eNOTIFY_TOUCH_LOST|eDETECT_DISCRETE_CONTACT
  }

}

}
