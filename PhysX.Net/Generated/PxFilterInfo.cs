//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhysX.Net {

public class PxFilterInfo : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PxFilterInfo(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxFilterInfo obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PxFilterInfo() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          physxPINVOKE.delete_PxFilterInfo(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public PxFilterInfo() : this(physxPINVOKE.new_PxFilterInfo__SWIG_0(), true) {
  }

  public PxFilterInfo(SWIGTYPE_p_physx__PxFlagsT_physx__PxFilterFlag__Enum_uint16_t_t filterFlags_) : this(physxPINVOKE.new_PxFilterInfo__SWIG_1(SWIGTYPE_p_physx__PxFlagsT_physx__PxFilterFlag__Enum_uint16_t_t.getCPtr(filterFlags_)), true) {
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_physx__PxFlagsT_physx__PxFilterFlag__Enum_uint16_t_t filterFlags {
    set {
      physxPINVOKE.PxFilterInfo_filterFlags_set(swigCPtr, SWIGTYPE_p_physx__PxFlagsT_physx__PxFilterFlag__Enum_uint16_t_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = physxPINVOKE.PxFilterInfo_filterFlags_get(swigCPtr);
      SWIGTYPE_p_physx__PxFlagsT_physx__PxFilterFlag__Enum_uint16_t_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_physx__PxFlagsT_physx__PxFilterFlag__Enum_uint16_t_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_physx__PxFlagsT_physx__PxPairFlag__Enum_uint16_t_t pairFlags {
    set {
      physxPINVOKE.PxFilterInfo_pairFlags_set(swigCPtr, SWIGTYPE_p_physx__PxFlagsT_physx__PxPairFlag__Enum_uint16_t_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = physxPINVOKE.PxFilterInfo_pairFlags_get(swigCPtr);
      SWIGTYPE_p_physx__PxFlagsT_physx__PxPairFlag__Enum_uint16_t_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_physx__PxFlagsT_physx__PxPairFlag__Enum_uint16_t_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_uint32_t filterPairIndex {
    set {
      physxPINVOKE.PxFilterInfo_filterPairIndex_set(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(value));
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxFilterInfo_filterPairIndex_get(swigCPtr), true);
      if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}

}
