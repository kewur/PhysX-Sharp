//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhysX.Net {

public class PxHitFlag : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PxHitFlag(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxHitFlag obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PxHitFlag() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          physxPINVOKE.delete_PxHitFlag(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public PxHitFlag() : this(physxPINVOKE.new_PxHitFlag(), true) {
  }

  public enum Enum {
    ePOSITION = (1 << 0),
    eNORMAL = (1 << 1),
    eDISTANCE = (1 << 2),
    eUV = (1 << 3),
    eASSUME_NO_INITIAL_OVERLAP = (1 << 4),
    eMESH_MULTIPLE = (1 << 5),
    eMESH_ANY = (1 << 6),
    eMESH_BOTH_SIDES = (1 << 7),
    ePRECISE_SWEEP = (1 << 8),
    eMTD = (1 << 9),
    eFACE_INDEX = (1 << 10),
    eDEFAULT = ePOSITION|eNORMAL|eDISTANCE|eFACE_INDEX,
    eMODIFIABLE_FLAGS = eMESH_MULTIPLE|eMESH_BOTH_SIDES|eASSUME_NO_INITIAL_OVERLAP|ePRECISE_SWEEP
  }

}

}
