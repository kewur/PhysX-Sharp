//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhysX.Net {

public class PxPhysics : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PxPhysics(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxPhysics obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PxPhysics() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          physxPINVOKE.delete_PxPhysics(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual void release() {
    physxPINVOKE.PxPhysics_release(swigCPtr);
  }

  public virtual SWIGTYPE_p_physx__PxFoundation getFoundation() {
    SWIGTYPE_p_physx__PxFoundation ret = new SWIGTYPE_p_physx__PxFoundation(physxPINVOKE.PxPhysics_getFoundation(swigCPtr), false);
    return ret;
  }

  public virtual PxAggregate createAggregate(SWIGTYPE_p_uint32_t maxSize, bool enableSelfCollision) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createAggregate(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(maxSize), enableSelfCollision);
    PxAggregate ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxAggregate(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PxTolerancesScale getTolerancesScale() {
    PxTolerancesScale ret = new PxTolerancesScale(physxPINVOKE.PxPhysics_getTolerancesScale(swigCPtr), false);
    return ret;
  }

  public virtual SWIGTYPE_p_physx__PxTriangleMesh createTriangleMesh(SWIGTYPE_p_physx__PxInputStream stream) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createTriangleMesh(swigCPtr, SWIGTYPE_p_physx__PxInputStream.getCPtr(stream));
    SWIGTYPE_p_physx__PxTriangleMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_physx__PxTriangleMesh(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getNbTriangleMeshes() {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getNbTriangleMeshes(swigCPtr), true);
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getTriangleMeshes(SWIGTYPE_p_p_physx__PxTriangleMesh userBuffer, SWIGTYPE_p_uint32_t bufferSize, SWIGTYPE_p_uint32_t startIndex) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getTriangleMeshes__SWIG_0(swigCPtr, SWIGTYPE_p_p_physx__PxTriangleMesh.getCPtr(userBuffer), SWIGTYPE_p_uint32_t.getCPtr(bufferSize), SWIGTYPE_p_uint32_t.getCPtr(startIndex)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getTriangleMeshes(SWIGTYPE_p_p_physx__PxTriangleMesh userBuffer, SWIGTYPE_p_uint32_t bufferSize) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getTriangleMeshes__SWIG_1(swigCPtr, SWIGTYPE_p_p_physx__PxTriangleMesh.getCPtr(userBuffer), SWIGTYPE_p_uint32_t.getCPtr(bufferSize)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_physx__PxHeightField createHeightField(SWIGTYPE_p_physx__PxInputStream stream) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createHeightField(swigCPtr, SWIGTYPE_p_physx__PxInputStream.getCPtr(stream));
    SWIGTYPE_p_physx__PxHeightField ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_physx__PxHeightField(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getNbHeightFields() {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getNbHeightFields(swigCPtr), true);
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getHeightFields(SWIGTYPE_p_p_physx__PxHeightField userBuffer, SWIGTYPE_p_uint32_t bufferSize, SWIGTYPE_p_uint32_t startIndex) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getHeightFields__SWIG_0(swigCPtr, SWIGTYPE_p_p_physx__PxHeightField.getCPtr(userBuffer), SWIGTYPE_p_uint32_t.getCPtr(bufferSize), SWIGTYPE_p_uint32_t.getCPtr(startIndex)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getHeightFields(SWIGTYPE_p_p_physx__PxHeightField userBuffer, SWIGTYPE_p_uint32_t bufferSize) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getHeightFields__SWIG_1(swigCPtr, SWIGTYPE_p_p_physx__PxHeightField.getCPtr(userBuffer), SWIGTYPE_p_uint32_t.getCPtr(bufferSize)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_physx__PxConvexMesh createConvexMesh(SWIGTYPE_p_physx__PxInputStream stream) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createConvexMesh(swigCPtr, SWIGTYPE_p_physx__PxInputStream.getCPtr(stream));
    SWIGTYPE_p_physx__PxConvexMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_physx__PxConvexMesh(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getNbConvexMeshes() {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getNbConvexMeshes(swigCPtr), true);
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getConvexMeshes(SWIGTYPE_p_p_physx__PxConvexMesh userBuffer, SWIGTYPE_p_uint32_t bufferSize, SWIGTYPE_p_uint32_t startIndex) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getConvexMeshes__SWIG_0(swigCPtr, SWIGTYPE_p_p_physx__PxConvexMesh.getCPtr(userBuffer), SWIGTYPE_p_uint32_t.getCPtr(bufferSize), SWIGTYPE_p_uint32_t.getCPtr(startIndex)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getConvexMeshes(SWIGTYPE_p_p_physx__PxConvexMesh userBuffer, SWIGTYPE_p_uint32_t bufferSize) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getConvexMeshes__SWIG_1(swigCPtr, SWIGTYPE_p_p_physx__PxConvexMesh.getCPtr(userBuffer), SWIGTYPE_p_uint32_t.getCPtr(bufferSize)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PxClothFabric createClothFabric(SWIGTYPE_p_physx__PxInputStream stream) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createClothFabric__SWIG_0(swigCPtr, SWIGTYPE_p_physx__PxInputStream.getCPtr(stream));
    PxClothFabric ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxClothFabric(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PxClothFabric createClothFabric(PxClothFabricDesc desc) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createClothFabric__SWIG_1(swigCPtr, PxClothFabricDesc.getCPtr(desc));
    PxClothFabric ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxClothFabric(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getNbClothFabrics() {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getNbClothFabrics(swigCPtr), true);
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getClothFabrics(SWIGTYPE_p_p_physx__PxClothFabric userBuffer, SWIGTYPE_p_uint32_t bufferSize) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getClothFabrics(swigCPtr, SWIGTYPE_p_p_physx__PxClothFabric.getCPtr(userBuffer), SWIGTYPE_p_uint32_t.getCPtr(bufferSize)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PxScene createScene(PxSceneDesc sceneDesc) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createScene(swigCPtr, PxSceneDesc.getCPtr(sceneDesc));
    PxScene ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxScene(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getNbScenes() {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getNbScenes(swigCPtr), true);
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getScenes(SWIGTYPE_p_p_physx__PxScene userBuffer, SWIGTYPE_p_uint32_t bufferSize, SWIGTYPE_p_uint32_t startIndex) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getScenes__SWIG_0(swigCPtr, SWIGTYPE_p_p_physx__PxScene.getCPtr(userBuffer), SWIGTYPE_p_uint32_t.getCPtr(bufferSize), SWIGTYPE_p_uint32_t.getCPtr(startIndex)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getScenes(SWIGTYPE_p_p_physx__PxScene userBuffer, SWIGTYPE_p_uint32_t bufferSize) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getScenes__SWIG_1(swigCPtr, SWIGTYPE_p_p_physx__PxScene.getCPtr(userBuffer), SWIGTYPE_p_uint32_t.getCPtr(bufferSize)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PxRigidStatic createRigidStatic(PxTransform pose) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createRigidStatic(swigCPtr, PxTransform.getCPtr(pose));
    PxRigidStatic ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxRigidStatic(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PxRigidDynamic createRigidDynamic(PxTransform pose) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createRigidDynamic(swigCPtr, PxTransform.getCPtr(pose));
    PxRigidDynamic ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxRigidDynamic(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_physx__PxParticleSystem createParticleSystem(SWIGTYPE_p_uint32_t maxParticles, bool perParticleRestOffset) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createParticleSystem__SWIG_0(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(maxParticles), perParticleRestOffset);
    SWIGTYPE_p_physx__PxParticleSystem ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_physx__PxParticleSystem(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_physx__PxParticleSystem createParticleSystem(SWIGTYPE_p_uint32_t maxParticles) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createParticleSystem__SWIG_1(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(maxParticles));
    SWIGTYPE_p_physx__PxParticleSystem ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_physx__PxParticleSystem(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_physx__PxParticleFluid createParticleFluid(SWIGTYPE_p_uint32_t maxParticles, bool perParticleRestOffset) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createParticleFluid__SWIG_0(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(maxParticles), perParticleRestOffset);
    SWIGTYPE_p_physx__PxParticleFluid ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_physx__PxParticleFluid(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_physx__PxParticleFluid createParticleFluid(SWIGTYPE_p_uint32_t maxParticles) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createParticleFluid__SWIG_1(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(maxParticles));
    SWIGTYPE_p_physx__PxParticleFluid ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_physx__PxParticleFluid(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_physx__PxCloth createCloth(PxTransform globalPose, PxClothFabric fabric, PxClothParticle particles, SWIGTYPE_p_physx__PxFlagsT_physx__PxClothFlag__Enum_uint16_t_t flags) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createCloth(swigCPtr, PxTransform.getCPtr(globalPose), PxClothFabric.getCPtr(fabric), PxClothParticle.getCPtr(particles), SWIGTYPE_p_physx__PxFlagsT_physx__PxClothFlag__Enum_uint16_t_t.getCPtr(flags));
    SWIGTYPE_p_physx__PxCloth ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_physx__PxCloth(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_physx__PxPruningStructure createPruningStructure(SWIGTYPE_p_p_physx__PxRigidActor actors, SWIGTYPE_p_uint32_t nbActors) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createPruningStructure(swigCPtr, SWIGTYPE_p_p_physx__PxRigidActor.getCPtr(actors), SWIGTYPE_p_uint32_t.getCPtr(nbActors));
    SWIGTYPE_p_physx__PxPruningStructure ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_physx__PxPruningStructure(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PxShape createShape(PxGeometry geometry, PxMaterial material, bool isExclusive, SWIGTYPE_p_physx__PxFlagsT_physx__PxShapeFlag__Enum_uint8_t_t shapeFlags) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createShape__SWIG_0(swigCPtr, PxGeometry.getCPtr(geometry), PxMaterial.getCPtr(material), isExclusive, SWIGTYPE_p_physx__PxFlagsT_physx__PxShapeFlag__Enum_uint8_t_t.getCPtr(shapeFlags));
    PxShape ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxShape(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PxShape createShape(PxGeometry geometry, PxMaterial material, bool isExclusive) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createShape__SWIG_1(swigCPtr, PxGeometry.getCPtr(geometry), PxMaterial.getCPtr(material), isExclusive);
    PxShape ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxShape(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PxShape createShape(PxGeometry geometry, PxMaterial material) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createShape__SWIG_2(swigCPtr, PxGeometry.getCPtr(geometry), PxMaterial.getCPtr(material));
    PxShape ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxShape(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PxShape createShape(PxGeometry geometry, SWIGTYPE_p_p_physx__PxMaterial materials, SWIGTYPE_p_uint16_t materialCount, bool isExclusive, SWIGTYPE_p_physx__PxFlagsT_physx__PxShapeFlag__Enum_uint8_t_t shapeFlags) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createShape__SWIG_3(swigCPtr, PxGeometry.getCPtr(geometry), SWIGTYPE_p_p_physx__PxMaterial.getCPtr(materials), SWIGTYPE_p_uint16_t.getCPtr(materialCount), isExclusive, SWIGTYPE_p_physx__PxFlagsT_physx__PxShapeFlag__Enum_uint8_t_t.getCPtr(shapeFlags));
    PxShape ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxShape(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PxShape createShape(PxGeometry geometry, SWIGTYPE_p_p_physx__PxMaterial materials, SWIGTYPE_p_uint16_t materialCount, bool isExclusive) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createShape__SWIG_4(swigCPtr, PxGeometry.getCPtr(geometry), SWIGTYPE_p_p_physx__PxMaterial.getCPtr(materials), SWIGTYPE_p_uint16_t.getCPtr(materialCount), isExclusive);
    PxShape ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxShape(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PxShape createShape(PxGeometry geometry, SWIGTYPE_p_p_physx__PxMaterial materials, SWIGTYPE_p_uint16_t materialCount) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createShape__SWIG_5(swigCPtr, PxGeometry.getCPtr(geometry), SWIGTYPE_p_p_physx__PxMaterial.getCPtr(materials), SWIGTYPE_p_uint16_t.getCPtr(materialCount));
    PxShape ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxShape(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getNbShapes() {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getNbShapes(swigCPtr), true);
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getShapes(SWIGTYPE_p_p_physx__PxShape userBuffer, SWIGTYPE_p_uint32_t bufferSize, SWIGTYPE_p_uint32_t startIndex) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getShapes__SWIG_0(swigCPtr, SWIGTYPE_p_p_physx__PxShape.getCPtr(userBuffer), SWIGTYPE_p_uint32_t.getCPtr(bufferSize), SWIGTYPE_p_uint32_t.getCPtr(startIndex)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getShapes(SWIGTYPE_p_p_physx__PxShape userBuffer, SWIGTYPE_p_uint32_t bufferSize) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getShapes__SWIG_1(swigCPtr, SWIGTYPE_p_p_physx__PxShape.getCPtr(userBuffer), SWIGTYPE_p_uint32_t.getCPtr(bufferSize)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PxConstraint createConstraint(PxRigidActor actor0, PxRigidActor actor1, PxConstraintConnector connector, PxConstraintShaderTable shaders, SWIGTYPE_p_uint32_t dataSize) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createConstraint(swigCPtr, PxRigidActor.getCPtr(actor0), PxRigidActor.getCPtr(actor1), PxConstraintConnector.getCPtr(connector), PxConstraintShaderTable.getCPtr(shaders), SWIGTYPE_p_uint32_t.getCPtr(dataSize));
    PxConstraint ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxConstraint(cPtr, false);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PxArticulation createArticulation() {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createArticulation(swigCPtr);
    PxArticulation ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxArticulation(cPtr, false);
    return ret;
  }

  public virtual PxMaterial createMaterial(float staticFriction, float dynamicFriction, float restitution) {
    global::System.IntPtr cPtr = physxPINVOKE.PxPhysics_createMaterial(swigCPtr, staticFriction, dynamicFriction, restitution);
    PxMaterial ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxMaterial(cPtr, false);
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getNbMaterials() {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getNbMaterials(swigCPtr), true);
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getMaterials(SWIGTYPE_p_p_physx__PxMaterial userBuffer, SWIGTYPE_p_uint32_t bufferSize, SWIGTYPE_p_uint32_t startIndex) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getMaterials__SWIG_0(swigCPtr, SWIGTYPE_p_p_physx__PxMaterial.getCPtr(userBuffer), SWIGTYPE_p_uint32_t.getCPtr(bufferSize), SWIGTYPE_p_uint32_t.getCPtr(startIndex)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_uint32_t getMaterials(SWIGTYPE_p_p_physx__PxMaterial userBuffer, SWIGTYPE_p_uint32_t bufferSize) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(physxPINVOKE.PxPhysics_getMaterials__SWIG_1(swigCPtr, SWIGTYPE_p_p_physx__PxMaterial.getCPtr(userBuffer), SWIGTYPE_p_uint32_t.getCPtr(bufferSize)), true);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void registerDeletionListener(PxDeletionListener observer, SWIGTYPE_p_physx__PxFlagsT_physx__PxDeletionEventFlag__Enum_uint8_t_t deletionEvents, bool restrictedObjectSet) {
    physxPINVOKE.PxPhysics_registerDeletionListener__SWIG_0(swigCPtr, PxDeletionListener.getCPtr(observer), SWIGTYPE_p_physx__PxFlagsT_physx__PxDeletionEventFlag__Enum_uint8_t_t.getCPtr(deletionEvents), restrictedObjectSet);
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void registerDeletionListener(PxDeletionListener observer, SWIGTYPE_p_physx__PxFlagsT_physx__PxDeletionEventFlag__Enum_uint8_t_t deletionEvents) {
    physxPINVOKE.PxPhysics_registerDeletionListener__SWIG_1(swigCPtr, PxDeletionListener.getCPtr(observer), SWIGTYPE_p_physx__PxFlagsT_physx__PxDeletionEventFlag__Enum_uint8_t_t.getCPtr(deletionEvents));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void unregisterDeletionListener(PxDeletionListener observer) {
    physxPINVOKE.PxPhysics_unregisterDeletionListener(swigCPtr, PxDeletionListener.getCPtr(observer));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void registerDeletionListenerObjects(PxDeletionListener observer, SWIGTYPE_p_p_physx__PxBase observables, SWIGTYPE_p_uint32_t observableCount) {
    physxPINVOKE.PxPhysics_registerDeletionListenerObjects(swigCPtr, PxDeletionListener.getCPtr(observer), SWIGTYPE_p_p_physx__PxBase.getCPtr(observables), SWIGTYPE_p_uint32_t.getCPtr(observableCount));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void unregisterDeletionListenerObjects(PxDeletionListener observer, SWIGTYPE_p_p_physx__PxBase observables, SWIGTYPE_p_uint32_t observableCount) {
    physxPINVOKE.PxPhysics_unregisterDeletionListenerObjects(swigCPtr, PxDeletionListener.getCPtr(observer), SWIGTYPE_p_p_physx__PxBase.getCPtr(observables), SWIGTYPE_p_uint32_t.getCPtr(observableCount));
    if (physxPINVOKE.SWIGPendingException.Pending) throw physxPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual SWIGTYPE_p_physx__PxPhysicsInsertionCallback getPhysicsInsertionCallback() {
    SWIGTYPE_p_physx__PxPhysicsInsertionCallback ret = new SWIGTYPE_p_physx__PxPhysicsInsertionCallback(physxPINVOKE.PxPhysics_getPhysicsInsertionCallback(swigCPtr), false);
    return ret;
  }

}

}
