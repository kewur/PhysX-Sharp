//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhysX.Net {

public class PxConstraintFlag : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PxConstraintFlag(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxConstraintFlag obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PxConstraintFlag() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          physxPINVOKE.delete_PxConstraintFlag(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public PxConstraintFlag() : this(physxPINVOKE.new_PxConstraintFlag(), true) {
  }

  public enum Enum {
    eBROKEN = 1 << 0,
    ePROJECT_TO_ACTOR0 = 1 << 1,
    ePROJECT_TO_ACTOR1 = 1 << 2,
    ePROJECTION = ePROJECT_TO_ACTOR0|ePROJECT_TO_ACTOR1,
    eCOLLISION_ENABLED = 1 << 3,
    eVISUALIZATION = 1 << 4,
    eDRIVE_LIMITS_ARE_FORCES = 1 << 5,
    eIMPROVED_SLERP = 1 << 7,
    eDISABLE_PREPROCESSING = 1 << 8,
    eGPU_COMPATIBLE = 1 << 9
  }

}

}
